#==============================================================
#
#  Name: RELEASE_NOTES
#
#  Rem:  This files describes release notes for
#        the mps_database application.
#
#  Auth: xx-Dec-2012, XXX         (xxx)
#  Rev:  dd-mmm-yyyy, Reviewer's Name    (USERNAME)
#--------------------------------------------------------------
mps_database-R2-0-4: (7 May 2020) J. Mock
  * Update tools, import list, and templates to support FW and devices installed
    for Cu Linac Operation - All devices in database though.
  * Remove WireScanners from import list until we figure out how to deal with them.

mps_database-R2-0-3: (16 Aug 2019)
  * Error checking when getting list of threshold PVs
  * Addition of LCLS1 remap application IDs to generated config.yaml

mps_database-R2-0-2:
  * Minor fix to EicHistoryServer.sh script 
  * Addition of MPS FW scale/offset PVs for BLM apps for 
    generated epics databases (mps.db)
  * Addition of LCLS-1 node Id, IP addr, broadcast addr
    to the config.yaml file

mps_database-R2-0-1:
  * Generation of runtime database for EIC
  * EIC version 2019-08-05-eic

mps_database-R2-0-0:
  * BLM threshold PVs moved back to the generated mps.db
  * Removed mps_*.cmd files generated, not needed after
    records moved back to mps.db file.
  * Restored several template files to templates/epics_db
    area
  * Database import: all threshold PVs are generated for
    the integrators defined in the configuration, not
    only those that define faults.

mps_database-R1-4-0:
  * Compatible with l2MpsAsyn-R3.1.0
  * Removed PVs that connect to YCPSWASYN_PORT, these are
    loaded using the mpsLN.db file provided by l2MpsLN
  * Removed threshold PVs, they belong to l2MpsAsyn module,
    using mps.db file
  * Removed all template files related to registers, they
    also belong to l2MpsAsyn module

mps_database-R1-3-1:
  * Moved Link Node database substitution files from the l2MpsLN
    app into the database for automatic generation.
  * Added logic to the export_edl.py to build macros for the
    link_node.tmpl cheetah file that. Information is extracted
    from the dictonary loaded from the database by the MpsAppReader. 
    The export_edl.py generates a link_node.edl
    file for each sioc in the generated display/link_node/<sioc>
    areas. The panels loaded by the generated display are in 
    the l2MpsLN/srcDisplay. For each area (e.g. BSYH) one
    panel is created under display/link_node/areas, with the name
    mps_<area>_link_nodes.edl.

mps_database-R1-3-0:
  * Modified the device.position field - it is now a string because
    there are PVs fields that need characters besides the location
    number. This was added for the LBLMs, which need to have chains
    A and B distinguished.
  * Fixes to tools scripts to reflect schema changes in previous
    version.
  * Scripts to change thresholds and bypass now change the runtime
    database and set the CN/LN PVs as well
  * Addition of Channel Access Security Group "MCC" for all PVs
  * Addition of tool to export alhConfig files (export_alarms.py), along
    with template files (templates/alarms dir)

mps_database-R1-2-0: (Apr 26 2019)
  * Charge in export_apps_epics.py to generate records for virtual
    inputs; addition of template file for virtual inputs.
  * Addition of lcls1_id field for the link nodes. The field has 
    the LCLS-I LN ID, which is used to assemble the LN IP address
    for the LCLS-I MPS network.
  * Addition of new devices to GUNB database (populate-gunb-t0.py)
  * Changes in database schema:
    - Removal of 'location' field from application_cards
    - Addition of 'link_node_id' field to application_cards
    - Change from single link_node to multiple link_nodes in
      crate table. A crate now can have one or more link_nodes.
      The additional link_nodes are needed when extra 'Generic ADC'
      cards are present. That is the case for cards that read
      LBLMs/PBLMs that are not in slot 2.

mps_database-R1-1-3-eic: (May 28 2019)
  * Branch for EIC

mps_database-R1-1-2: (Jan 14 2019)
  * Change in bypass PV names: BYPD -> BYPC
                               BYPD_STR -> BYP_END

mps_database-R1-1-1: (Dec 19 2018)
  * addition of export_map.py script: this generates pdf files with
    graphs showing the inputs connected to link nodes (see file for
    usage)
  * misc changes to scripts missed in previous version to handle
    field name change in crates table
  * increase checks in the check_channels.py script
  * removed BCS BLMs from import files - they were causing database
    errors during import (due to strings with special characters)

mps_database-R1-1-0: (Dec 05 2018)
  * export_edl.py: added generation of screens for individual link nodes
  * export_epics.py: added generation of archive request files
  * Renamed the 'number' field in the crates table to 'crate_id'.
    The 'crate_id' identifies the crate within the crates connected
    to a single CPU host. Databases generated with prior version 
    will not work with this mps_database release. Also the package
    central_node_engine-R1-3-3 and below and 
    central_node_ioc-R1-2-9 and below will not work with databases
    generated by this mps_database release because of the field
    name change.

mps_database-R1-0-9: (Oct 16 2018)
  * Addition of support for virtual channels:
    - export_epics.py script now has the --link-nodes switch,
      which generates EPICS database files for the link nodes
      that have virtual channels.
    - central_node_test.py modified to support virtual cards.
      They behave as digital apps.

mps_database-R1-0-8: (Sep 13 2018)
  * Change to export_epics.py script: added pop up windows to
    confirm bypass save and bypass restore. Also added progress
    bar when saving/restoring.

mps_database-R1-0-7: (Sep 11 2018)
  * Addition of function to return faultState names in tools/mps_names.py
  * Removal of extra device states from tools/populate-gunb-t0.py script
  * Addition of --fault-states option to export_epics.py script. This is
    to let information out about the fault state of a device. For example,
    for the profile monitor PROF:GUNB:753 there are these fault state PVs:

	PROF:GUNB:753:TGT:IN
	PROF:GUNB:753:TGT:MOVING
	PROF:GUNB:753:TGT:BROKEN
	
    Those PVs will tell in which fault state the device is (if there is a fault)

mps_database-R1-0-6: (Aug 17 2018)
  * Renaming historyServer.* to EicHistoryServer.*

mps_database-R1-0-5: (Aug 22 2018)
  * Addition of tools/historyServer.sh script to start server

mps_database-R1-0-4: (Aug 09 2018)
  * Addition of .cram directory to allow installation in production (for historyServer)
  * Change to BPM status bits order coming from update message
