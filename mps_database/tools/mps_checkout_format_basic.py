#This script formats the logs generated by mps_checkout.py into plain text files
#

import sys
import os
from datetime import datetime, date
import argparse
import json

def process_args(argv):
     parser=argparse.ArgumentParser(description='This script is used to verify the MPS system set points')
     parser.add_argument('-SrcFileLoc', required=True, type = str, help='The directory containing the checkout JSON files')
     parser.add_argument('-SrcFileName', required=True, type= str, help='The filename that you would like formated')
     parser.add_argument('-LogFileLoc', required=True, type = str, help='The directory where the log files will be written to')
     parser.add_argument('-LogFileName', required=True, type = str, help='The name of the written log file')
     parser=parser.parse_args()
     
     return parser
     
def main(argv):
    controls =  process_args(argv)
    
    with open(controls.SrcFileLoc + controls.SrcFileName) as json_file:
        checkoutLog = json.load(json_file)
       
    formatedLog = 'Report on the checkout of MPS AppID'+str(controls.SrcFileName)+"\n\n"
    
    formatedLog += "UserInfo\n"
    for key in checkoutLog['UserInfo']:
        if(not(key=="TimeTaken")):
            formatedLog += key+": "+str(checkoutLog['UserInfo'][key])+"\n"
    
    formatedLog += "\n"    
        
    for device in checkoutLog['AppInfo']['devices']:
        formatedLog += "Working on "+device+"\n"
        
        for item in checkoutLog[device]:
            formatedLog += "\t" + item + ": " + str(checkoutLog[device][item])+  "\n"        
            
        formatedLog += "\n\n"
    
    formatedCheckoutFile = open(os.path.join(controls.LogFileLoc, controls.LogFileName), 'a')
    
    formatedCheckoutFile.write(formatedLog)
    
    return 0
    
if __name__ == "__main__":
    main(sys.argv[1:])
