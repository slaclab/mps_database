#
# This script reads the PVs with the number of remaining
# seconds on active bypasses. It should be used prior to
# rebooting the MPS Central Node IOC.
#
# It reads the *BYPD PVs and generates another script
# that will restore the remaining seconds to the *BYPT PVs
#
# This script is generated by the export_epics.py that
# is executed as part of the MPS Database release process
#
# Generated on Tue Jun 15 11:57:29 2021
#

function getBypass {
  v=`caget -t $1`
  if [ $? != '0' ]; then
    echo 'ERROR: failed to get bypass status '$1
    echo 'Please try running this script again'
    exit 1
  fi
  if [ $v != '0' ]; then
    echo 'caput '$2' '${v} >> $4
    echo 'echo '$3 >> $4
    bypassCount=$[bypassCount + 1]
  fi
}

msg='*** This will save the current bypass times and values ***'
hasRestore='0'
if [ -f $PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore ]; then
   hasRestore='1'
   timestamp=`date +'%m-%d-%y-%H:%M:%S'`
   newFile=$PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore-$timestamp
   msg=$msg'

The current restore file will be saved with the timestamp '$timestamp' in the name'
fi

msg=$msg'

Proceed?'
zenity --question --text "$msg" --ok-label=YES --cancel-label=NO --title "MPS Analog Input Bypass"
bypassCount=0

if [ $? == '1' ]; then
  echo 'Save bypass cancelled.'
  exit 1
fi

if [ $hasRestore == '1' ]; then
  echo 'INFO: found existing restore file, saving it with current timestamp ('$newFile')'
  mv -f $PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore $newFile
fi

echo 'INFO: getting current bypasses...'

echo '#!/bin/bash ' >> $PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore
echo '# ' >> $PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore
echo '# Bypass restore file generated on '`date`'' >> $PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore
echo '# ' >> $PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore
echo 'date="'`date`'"' >> $PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore
echo 'msg="This will restore analog device bypasses saved on $date."' >> $PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore
echo 'msg=$msg"\n\nProceed?"' >> $PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore
echo 'zenity --question --text "$msg" --ok-label=YES --cancel-label=NO --title "MPS Analog Input Bypass"' >> $PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore
(
echo '(' >> $PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore
echo '  bypassCount=0' >> $PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore
getBypass SOLN:GUNB:212:I0_BYPT SOLN:GUNB:212:I0_BYPD 0 "$PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore"
echo 16.666666666666668
getBypass SOLN:GUNB:823:I0_BYPT SOLN:GUNB:823:I0_BYPD 16.666666666666668 "$PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore"
echo 33.333333333333336
getBypass BPMS:GUNB:314:X_BYPT BPMS:GUNB:314:X_BYPD 33.333333333333336 "$PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore"
getBypass BPMS:GUNB:314:Y_BYPT BPMS:GUNB:314:Y_BYPD 33.333333333333336 "$PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore"
getBypass BPMS:GUNB:314:TMIT_BYPT BPMS:GUNB:314:TMIT_BYPD 33.333333333333336 "$PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore"
echo 50.0
getBypass BPMS:GUNB:925:X_BYPT BPMS:GUNB:925:X_BYPD 50.0 "$PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore"
getBypass BPMS:GUNB:925:Y_BYPT BPMS:GUNB:925:Y_BYPD 50.0 "$PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore"
getBypass BPMS:GUNB:925:TMIT_BYPT BPMS:GUNB:925:TMIT_BYPD 50.0 "$PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore"
echo 66.66666666666667
getBypass TORO:GUNB:360:CHARGE_BYPT TORO:GUNB:360:CHARGE_BYPD 66.66666666666667 "$PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore"
getBypass TORO:GUNB:360:DIFF_BYPT TORO:GUNB:360:DIFF_BYPD 66.66666666666667 "$PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore"
echo 83.33333333333334
getBypass FARC:GUNB:999:CHARGE_BYPT FARC:GUNB:999:CHARGE_BYPD 83.33333333333334 "$PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore"
echo 100.00000000000001
  echo $bypassCount > /tmp/mps-analog-bypass-count.txt
) |
zenity --progress --percentage=0 --text="Saving analog bypass information..." --auto-close
echo ') |' >> $PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore
echo 'zenity --progress --percentage=0 --text="Restoring analog bypass information..." --auto-close' >> $PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore


bypassCount=`cat /tmp/mps-analog-bypass-count.txt`


if [ $bypassCount == '0' ]; then
  echo 'INFO: found no active bypasses'
else
  echo 'INFO: Found '${bypassCount}' active bypasses'
  echo 'INFO: Please run the script "$PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore" to restore bypasses'
  chmod a+x "$PHYSICS_TOP/mps_configuration/0/bypass/analog_devices.restore"
fi
echo 'Done.'
