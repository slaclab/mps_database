#================================================================================#
# LCLS-II MPS PV template for read-only registers                                #
# Macro description:                                                             #
#   - P     : Record name prefix                                                 #
#   - R     : Record name                                                        #
#   - DESC  : Description                                                        #
#   - PORT  : Asyn port name                                                     #
#   - ADDR  : Asyn parameter list number (0: AppBay0, 1: AppBay1, 2: MpsBase)    #
#   - PARAM : Asyn parameter name                                                #
#================================================================================#

record(longin, "$(P):$(FAULT)_THR_CH") {
    field(DESC, "Threshold channel")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(BAY))$(APP)_THRNUM_$(FAULT_INDEX)")
}#================================================================================#
# LCLS-II MPS PV template for read-only registers                                #
# Macro description:                                                             #
#   - P     : Record name prefix                                                 #
#   - R     : Record name                                                        #
#   - DESC  : Description                                                        #
#   - PORT  : Asyn port name                                                     #
#   - ADDR  : Asyn parameter list number (0: AppBay0, 1: AppBay1, 2: MpsBase)    #
#   - PARAM : Asyn parameter name                                                #
#================================================================================#

record(longin, "$(P):$(FAULT)_THR_CNT") {
    field(DESC, "Threshold count")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(BAY))$(APP)_THRCNT_$(FAULT_INDEX)")
}#================================================================================#
# LCLS-II MPS PV template for read-only registers                                #
# Macro description:                                                             #
#   - P     : Record name prefix                                                 #
#   - R     : Record name                                                        #
#   - DESC  : Description                                                        #
#   - PORT  : Asyn port name                                                     #
#   - ADDR  : Asyn parameter list number (0: AppBay0, 1: AppBay1, 2: MpsBase)    #
#   - PARAM : Asyn parameter name                                                #
#================================================================================#

record(longin, "$(P):$(FAULT)_THR_BYTEMAP") {
    field(DESC, "Threshold byte map")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(BAY))$(APP)_BYTEMAP_$(FAULT_INDEX)")
}#================================================================================#
# LCLS-II MPS PV template for 1-bit read-write registers                         #
# Macro description:                                                             #
#   - P       : Record name prefix                                               #
#   - R       : Record name                                                      #
#   - DESC    : Description                                                      #
#   - PORT    : Asyn port name                                                   #
#   - ADDR    : Asyn parameter list number (0: AppBay0, 1: AppBay1, 2: MpsBase)  #
#   - PARAM   : Asyn parameter name                                              #
#   - ZNAM    : Label for the "0" state                                          #
#   - ONAM    : Label for the "1" state                                          #
#   - ASG     : Access security group                                            #
#   - ZSV     : Alarm for zero state                                             #
#   - RBV_ZSV : Alarm for zero state                                             #
#   - DISV    : Disable value (if SDIS has this value record is disabled)        #
#   - SDIS    : Source of disable value                                          #
#================================================================================#

record(bo, "$(P):$(FAULT)_IDL_EN") {
    field(DESC, "IDLE table enabled")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(DTYP, "asynUInt32Digital")
    field(OUT,  "@asynMask($(PORT),$(BAY),0x01)$(APP)_IDLEEN_$(FAULT_INDEX)")
    field(ZNAM, "Disabled")
    field(ONAM, "Enabled")
    field(ASG,  "MCC")
    field(ZSV,  "NO_ALARM")
    field(DISV, "1")
    field(SDIS, "")
}

record(bi, "$(P):$(FAULT)_IDL_EN_RBV") {
    field(DESC, "IDLE table enabled")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynUInt32Digital")
    field(INP,  "@asynMask($(PORT),$(BAY),0x01)$(APP)_IDLEEN_$(FAULT_INDEX)")
    field(ZNAM, "Disabled")
    field(ONAM, "Enabled")
    field(ASG,  "MCC")
    field(ZSV,  "NO_ALARM")
}
#================================================================================#
# LCLS-II MPS PV template for 1-bit read-only registers                          #
# Macro description:                                                             #
#   - P     : Record name prefix                                                 #
#   - R     : Record name                                                        #
#   - DESC  : Description                                                        #
#   - PORT  : Asyn port name                                                     #
#   - ADDR  : Asyn parameter list number (0: AppBay0, 1: AppBay1, 2: MpsBase)    #
#   - PARAM : Asyn parameter name                                                #
#   - ZNAM  : Label for the "0" state                                            #
#   - ONAM  : Label for the "1" state                                            #
#================================================================================#

record(bi, "$(P):$(FAULT)_LC1_EN") {
    field(DESC, "LCLS1 table enabled")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynUInt32Digital")
    field(INP,  "@asynMask($(PORT),$(BAY),0x01)$(APP)_LCLS1EN_$(FAULT_INDEX)")
    field(ZNAM, "Disabled")
    field(ONAM, "Enabled")
}#================================================================================#
# LCLS-II MPS PV template for 1-bit read-only registers                          #
# Macro description:                                                             #
#   - P     : Record name prefix                                                 #
#   - R     : Record name                                                        #
#   - DESC  : Description                                                        #
#   - PORT  : Asyn port name                                                     #
#   - ADDR  : Asyn parameter list number (0: AppBay0, 1: AppBay1, 2: MpsBase)    #
#   - PARAM : Asyn parameter name                                                #
#   - ZNAM  : Label for the "0" state                                            #
#   - ONAM  : Label for the "1" state                                            #
#================================================================================#

record(bi, "$(P):$(FAULT)_LC1_EN") {
    field(DESC, "LCLS1 table enabled")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynUInt32Digital")
    field(INP,  "@asynMask($(PORT),$(BAY),0x01)$(APP)_LCLS1EN_$(FAULT_INDEX)")
    field(ZNAM, "Disabled")
    field(ONAM, "Enabled")
}#================================================================================#
# LCLS-II MPS Threshold PV template                                              #
# Macro description:                                                             #
#   - P     : Record name prefix                                                 #
#   - R     : Record name                                                        #
#   - DESC  : Description                                                        #
#   - EGU   : Engineering units                                                  #
#   - PREC  : Precision                                                          #
#   - PORT  : Asyn port name                                                     #
#   - BAY   : Bay number (0 or 1)                                                #
#   - APP   : Application name (BLM, BPM, BCM, BLEN)                             #
#   - TABLE : Threhold table (0: LCLS1, 1: No-beam, 2: Standard, 3: Alternative) #
#   - THR   : Threshold index (0-7)                                              #
#   - CH    : Threhold channel (application specific)                            #
#     * BLM  => (X)(Y), X=input channel(0-2), Y=Integration channel (0-3)        #
#     * BPM  => (X),    X=Channel (0:X, 1:Y, 2, TIMIT)                           #
#     * BCM  => (X),    X=Channel (0:Charge, 1:Difference)                       #
#     * BLEN => 0                                                                #
#================================================================================#

#### VALUES ####

# MINIMUM (Set and RBV)

record(ao, "$(P):$(FAULT)_T0_LC1_L") {
    field(DESC, "$(DESC)")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(PHAS, "2")
    field(DTYP, "asynFloat64")
    field(EGU,  "$(EGU)")
    field(PREC, "2")
    field(OUT,  "@asyn($(PORT),$(BAY))$(APP)_THRMIN_$(FAULT_INDEX)00")
    info(autosaveFields, "VAL")
}

record(ai,  "$(P):$(FAULT)_T0_LC1_L_RBV") {
    field(DESC, "$(DESC)")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynFloat64")
    field(EGU,  "$(EGU)")
    field(PREC, "2")
    field(INP,  "@asyn($(PORT),$(BAY))$(APP)_THRMIN_$(FAULT_INDEX)00")
}

# MAXIMUM (Set and RBV)

record(ao, "$(P):$(FAULT)_T0_LC1_H") {
    field(DESC, "$(DESC)")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(PHAS, "2")
    field(DTYP, "asynFloat64")
    field(EGU,  "$(EGU)")
    field(PREC, "2")
    field(OUT,  "@asyn($(PORT),$(BAY))$(APP)_THRMAX_$(FAULT_INDEX)00")
    info(autosaveFields, "VAL")
}

record(ai,  "$(P):$(FAULT)_T0_LC1_H_RBV") {
    field(DESC, "$(DESC)")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynFloat64")
    field(EGU,  "$(EGU)")
    field(PREC, "2")
    field(INP,  "@asyn($(PORT),$(BAY))$(APP)_THRMAX_$(FAULT_INDEX)00")
}

#### RAW VALUES ####

# Minimum

record(longin,  "$(P):$(FAULT)_T0_LC1_L_RAW") {
    field(DESC, "$(DESC)")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(BAY))$(APP)_THRMINR_$(FAULT_INDEX)00")
}

# Maximum

record(longin,  "$(P):$(FAULT)_T0_LC1_H_RAW") {
    field(DESC, "$(DESC)")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(BAY))$(APP)_THRMAXR_$(FAULT_INDEX)00")
}

#### ENABLES ####

# MINIMUM (Set and RBV)

record(bo, "$(P):$(FAULT)_T0_LC1_L_EN") {
    field(DESC, "$(DESC)")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(DTYP, "asynUInt32Digital")
    field(OUT,  "@asynMask($(PORT),$(BAY),0x01)$(APP)_THRMINEN_$(FAULT_INDEX)00")
    field(ZNAM, "Disable")
    field(ONAM, "Enable")
    info(autosaveFields, "VAL")
}

record(bi, "$(P):$(FAULT)_T0_LC1_L_EN_RBV") {
    field(DESC, "$(DESC)")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynUInt32Digital")
    field(INP,  "@asynMask($(PORT),$(BAY),0x01)$(APP)_THRMINEN_$(FAULT_INDEX)00")
    field(ZNAM, "Disabled")
    field(ONAM, "Enabled")
}


# MAXIMUM (Set and RBV)

record(bo,      "$(P):$(FAULT)_T0_LC1_H_EN") {
    field(DESC, "$(DESC)")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(DTYP, "asynUInt32Digital")
    field(OUT,  "@asynMask($(PORT),$(BAY),0x01)$(APP)_THRMAXEN_$(FAULT_INDEX)00")
    field(ZNAM, "Disable")
    field(ONAM, "Enable")
    info(autosaveFields, "VAL")
}

record(bi,      "$(P):$(FAULT)_T0_LC1_H_EN_RBV") {
    field(DESC, "$(DESC)")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynUInt32Digital")
    field(INP,  "@asynMask($(PORT),$(BAY),0x01)$(APP)_THRMAXEN_$(FAULT_INDEX)00")
    field(ZNAM, "Disabled")
    field(ONAM, "Enabled")
}
#================================================================================#
# LCLS-II MPS Threshold PV template                                              #
# Macro description:                                                             #
#   - P     : Record name prefix                                                 #
#   - R     : Record name                                                        #
#   - DESC  : Description                                                        #
#   - EGU   : Engineering units                                                  #
#   - PREC  : Precision                                                          #
#   - PORT  : Asyn port name                                                     #
#   - BAY   : Bay number (0 or 1)                                                #
#   - APP   : Application name (BLM, BPM, BCM, BLEN)                             #
#   - TABLE : Threhold table (0: LCLS1, 1: No-beam, 2: Standard, 3: Alternative) #
#   - THR   : Threshold index (0-7)                                              #
#   - CH    : Threhold channel (application specific)                            #
#     * BLM  => (X)(Y), X=input channel(0-2), Y=Integration channel (0-3)        #
#     * BPM  => (X),    X=Channel (0:X, 1:Y, 2, TIMIT)                           #
#     * BCM  => (X),    X=Channel (0:Charge, 1:Difference)                       #
#     * BLEN => 0                                                                #
#================================================================================#

#### VALUES ####

# MINIMUM (Set and RBV)

record(ao, "$(P):$(FAULT)_T0_IDL_L") {
    field(DESC, "$(DESC)")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(PHAS, "2")
    field(DTYP, "asynFloat64")
    field(EGU,  "$(EGU)")
    field(PREC, "2")
    field(OUT,  "@asyn($(PORT),$(BAY))$(APP)_THRMIN_$(FAULT_INDEX)10")
    info(autosaveFields, "VAL")
}

record(ai,  "$(P):$(FAULT)_T0_IDL_L_RBV") {
    field(DESC, "$(DESC)")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynFloat64")
    field(EGU,  "$(EGU)")
    field(PREC, "2")
    field(INP,  "@asyn($(PORT),$(BAY))$(APP)_THRMIN_$(FAULT_INDEX)10")
}

# MAXIMUM (Set and RBV)

record(ao, "$(P):$(FAULT)_T0_IDL_H") {
    field(DESC, "$(DESC)")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(PHAS, "2")
    field(DTYP, "asynFloat64")
    field(EGU,  "$(EGU)")
    field(PREC, "2")
    field(OUT,  "@asyn($(PORT),$(BAY))$(APP)_THRMAX_$(FAULT_INDEX)10")
    info(autosaveFields, "VAL")
}

record(ai,  "$(P):$(FAULT)_T0_IDL_H_RBV") {
    field(DESC, "$(DESC)")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynFloat64")
    field(EGU,  "$(EGU)")
    field(PREC, "2")
    field(INP,  "@asyn($(PORT),$(BAY))$(APP)_THRMAX_$(FAULT_INDEX)10")
}

#### RAW VALUES ####

# Minimum

record(longin,  "$(P):$(FAULT)_T0_IDL_L_RAW") {
    field(DESC, "$(DESC)")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(BAY))$(APP)_THRMINR_$(FAULT_INDEX)10")
}

# Maximum

record(longin,  "$(P):$(FAULT)_T0_IDL_H_RAW") {
    field(DESC, "$(DESC)")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(BAY))$(APP)_THRMAXR_$(FAULT_INDEX)10")
}

#### ENABLES ####

# MINIMUM (Set and RBV)

record(bo, "$(P):$(FAULT)_T0_IDL_L_EN") {
    field(DESC, "$(DESC)")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(DTYP, "asynUInt32Digital")
    field(OUT,  "@asynMask($(PORT),$(BAY),0x01)$(APP)_THRMINEN_$(FAULT_INDEX)10")
    field(ZNAM, "Disable")
    field(ONAM, "Enable")
    info(autosaveFields, "VAL")
}

record(bi, "$(P):$(FAULT)_T0_IDL_L_EN_RBV") {
    field(DESC, "$(DESC)")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynUInt32Digital")
    field(INP,  "@asynMask($(PORT),$(BAY),0x01)$(APP)_THRMINEN_$(FAULT_INDEX)10")
    field(ZNAM, "Disabled")
    field(ONAM, "Enabled")
}


# MAXIMUM (Set and RBV)

record(bo,      "$(P):$(FAULT)_T0_IDL_H_EN") {
    field(DESC, "$(DESC)")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(DTYP, "asynUInt32Digital")
    field(OUT,  "@asynMask($(PORT),$(BAY),0x01)$(APP)_THRMAXEN_$(FAULT_INDEX)10")
    field(ZNAM, "Disable")
    field(ONAM, "Enable")
    info(autosaveFields, "VAL")
}

record(bi,      "$(P):$(FAULT)_T0_IDL_H_EN_RBV") {
    field(DESC, "$(DESC)")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynUInt32Digital")
    field(INP,  "@asynMask($(PORT),$(BAY),0x01)$(APP)_THRMAXEN_$(FAULT_INDEX)10")
    field(ZNAM, "Disabled")
    field(ONAM, "Enabled")
}
#================================================================================#
# LCLS-II MPS Threshold scale factor and offset PV template                      #
# Macro description:                                                             #
#   - P               : Record name prefix                                       #
#   - R               : Channel name.                                            #
#   - DESC            : Description                                              #
#   - SCAN            : Scan period                                              #
#   - SCALE_SLOPE_PV  : Name of the PV with the scale slope value                #
#   - SCALE_OFFSET_PV : Name of the PV with the scale offset value               #
#   - EGU             : Engineering units                                        #
#   - PREC            : Precision                                                #
#   - PORT            : Asyn port name                                           #
#   - BAY             : Bay number (0 or 1)                                      #
#   - APP             : Application name (BLM, BPM, BCM, BLEN)                   #
#   - CH              : Threhold channel (application specific)                  #
#     * BLM  => (X)(Y), X=input channel(0-2), Y=Integration channel (0-3)        #
#     * BPM  => (X),    X=Channel (0:X, 1:Y, 2, TIMIT)                           #
#     * BCM  => (X),    X=Channel (0:Charge, 1:Difference)                       #
#     * BLEN => 0                                                                #
#================================================================================#

# Scale Factor PVs
record(ao,      "$(P):$(FAULT)_SS") {
    field(DESC, "Scale factor slope")
    field(SCAN, "1 second")
    field(PHAS, "1")
    field(PINI, "YES")
    field(EGU,  "$(EGU)/raw")
    field(PREC, "4")
    field(OMSL, "closed_loop")
    field(OIF,  "Full")
    field(DOL,  "$(P):$(FAULT)_FWSLO")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT),$(BAY))$(APP)_SCALESLOPE_$(FAULT_INDEX)")    
}

record(ai,      "$(P):$(FAULT)_SS_RBV") {
    field(DESC, "Scale factor slope")
    field(SCAN, "I/O Intr")
    field(EGU,  "$(EGU)/raw")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(BAY))$(APP)_SCALESLOPE_$(FAULT_INDEX)")
}

# Scale Offset PVs
record(ao,      "$(P):$(FAULT)_SO") {
    field(DESC, "Scale factor offset")
    field(SCAN, "1 second")
    field(PHAS, "1")
    field(PINI, "YES")
    field(EGU,  "raw")
    field(PREC, "0")
    field(OMSL, "closed_loop")
    field(OIF,  "Full")
    field(DOL,  "$(P):$(FAULT)_FWOFF")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT),$(BAY))$(APP)_SCALEOFFSET_$(FAULT_INDEX)")
}

record(ai,      "$(P):$(FAULT)_SO_RBV") {
    field(DESC, "Scale factor")
    field(SCAN, "I/O Intr")
    field(EGU,  "raw")
    field(PREC, "0")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(BAY))$(APP)_SCALEOFFSET_$(FAULT_INDEX)")
}
#===============================================#
# LCLS-II MPS Scale factor and offset PVs.      #
# Macro description:                            #
#   - P        : Application's PV name prefix   #
#   - PROPERTY : Property name                  #
#   - EGU      : Property's Engineering units   #
#   - PREC     : Precision                      #
#   - SLOPE    : Scale factor value             #
#   - OFFSET   : Scale offset value             #
#===============================================#

# Scale factor
record(ao,      "$(P):$(FAULT)_FWSLO") {
    field(DESC, "Scale factor")
    field(EGU,  "$(EGU)/raw")
    field(PREC, "5")
    field(SCAN, "Passive")
    field(PHAS, "0")
    field(PINI, "YES")
    field(VAL,  "$(SLOPE)")
    info(autosaveFields, "VAL")
}

# Scale offset
record(ao,      "$(P):$(FAULT)_FWOFF") {
    field(DESC, "Scale factor")
    field(EGU,  "raw")
    field(PREC, "5")
    field(SCAN, "Passive")
    field(PHAS, "0")
    field(PINI, "YES")
    field(VAL,  "$(OFFSET)")
    info(autosaveFields, "VAL")
}
