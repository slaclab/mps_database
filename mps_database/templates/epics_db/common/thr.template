#================================================================================#
# LCLS-II MPS Threshold PV template                                              #
# Macro description:                                                             #
#   - P     : Record name prefix                                                 #
#   - R     : Record name                                                        #
#   - DESC  : Description                                                        #
#   - EGU   : Engineering units                                                  #
#   - PREC  : Precision                                                          #
#   - PORT  : Asyn port name                                                     #
#   - BAY   : Bay number (0 or 1)                                                #
#   - APP   : Application name (BLM, BPM, BCM, BLEN)                             #
#   - TABLE : Threhold table (0: LCLS1, 1: No-beam, 2: Standard, 3: Alternative) #
#   - THR   : Threshold index (0-7)                                              #
#   - CH    : Threhold channel (application specific)                            #
#     * BLM  => (X)(Y), X=input channel(0-2), Y=Integration channel (0-3)        #
#     * BPM  => (X),    X=Channel (0:X, 1:Y, 2, TIMIT)                           #
#     * BCM  => (X),    X=Channel (0:Charge, 1:Difference)                       #
#     * BLEN => 0                                                                #
#================================================================================#

#### VALUES ####

# MINIMUM (Set and RBV)

record(ao, "$(P):$(R)_L") {
    field(DESC, "$(DESC)")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(PHAS, "2")
    field(DTYP, "asynFloat64")
    field(EGU,  "$(EGU)")
    field(PREC, "$(PREC)")
    field(OUT,  "@asyn($(PORT),$(BAY))$(APP)_THRMIN_$(CH)$(TABLE)$(THR)")
    info(autosaveFields, "VAL EGU")
}

record(ai,  "$(P):$(R)_L_RBV") {
    field(DESC, "$(DESC)")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynFloat64")
    field(EGU,  "$(EGU)")
    field(PREC, "$(PREC)")
    field(INP,  "@asyn($(PORT),$(BAY))$(APP)_THRMIN_$(CH)$(TABLE)$(THR)")
    info(autosaveFields, "EGU")
}

# MAXIMUM (Set and RBV)

record(ao, "$(P):$(R)_H") {
    field(DESC, "$(DESC)")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(PHAS, "2")
    field(DTYP, "asynFloat64")
    field(EGU,  "$(EGU)")
    field(PREC, "$(PREC)")
    field(OUT,  "@asyn($(PORT),$(BAY))$(APP)_THRMAX_$(CH)$(TABLE)$(THR)")
    info(autosaveFields, "VAL EGU")
}

record(ai,  "$(P):$(R)_H_RBV") {
    field(DESC, "$(DESC)")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynFloat64")
    field(EGU,  "$(EGU)")
    field(PREC, "$(PREC)")
    field(INP,  "@asyn($(PORT),$(BAY))$(APP)_THRMAX_$(CH)$(TABLE)$(THR)")
    info(autosaveFields, "EGU")
}

#### RAW VALUES ####

# Minimum

record(longin,  "$(P):$(R)_L_RAW") {
    field(DESC, "$(DESC)")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(BAY))$(APP)_THRMINR_$(CH)$(TABLE)$(THR)")
}

# Maximum

record(longin,  "$(P):$(R)_H_RAW") {
    field(DESC, "$(DESC)")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(BAY))$(APP)_THRMAXR_$(CH)$(TABLE)$(THR)")
}

#### ENABLES ####

# MINIMUM (Set and RBV)

record(bo, "$(P):$(R)_L_EN") {
    field(DESC, "$(DESC)")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(DTYP, "asynUInt32Digital")
    field(OUT,  "@asynMask($(PORT),$(BAY),0x01)$(APP)_THRMINEN_$(CH)$(TABLE)$(THR)")
    field(ZNAM, "Disable")
    field(ONAM, "Enable")
    info(autosaveFields, "VAL")
}

record(bi, "$(P):$(R)_L_EN_RBV") {
    field(DESC, "$(DESC)")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynUInt32Digital")
    field(INP,  "@asynMask($(PORT),$(BAY),0x01)$(APP)_THRMINEN_$(CH)$(TABLE)$(THR)")
    field(ZNAM, "Disabled")
    field(ONAM, "Enabled")
}


# MAXIMUM (Set and RBV)

record(bo,      "$(P):$(R)_H_EN") {
    field(DESC, "$(DESC)")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(DTYP, "asynUInt32Digital")
    field(OUT,  "@asynMask($(PORT),$(BAY),0x01)$(APP)_THRMAXEN_$(CH)$(TABLE)$(THR)")
    field(ZNAM, "Disable")
    field(ONAM, "Enable")
    info(autosaveFields, "VAL")
}

record(bi,      "$(P):$(R)_H_EN_RBV") {
    field(DESC, "$(DESC)")
    field(SCAN, "I/O Intr")
    field(PINI, "NO")
    field(DTYP, "asynUInt32Digital")
    field(INP,  "@asynMask($(PORT),$(BAY),0x01)$(APP)_THRMAXEN_$(CH)$(TABLE)$(THR)")
    field(ZNAM, "Disabled")
    field(ONAM, "Enabled")
}
